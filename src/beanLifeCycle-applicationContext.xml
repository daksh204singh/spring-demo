<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
		Add a logger config to see logging messages.
		- For more detailed logs, set values to "FINEST"
		- For info on logging levels, see: http://www.vogella.com/tutorials/Logging/article.html
	 -->
    <bean id="myLoggerConfig" class="com.daksh.springdemo.MyLoggerConfig" init-method="initLogger">
        <property name="rootLoggerLevel" value="FINEST" />
        <property name="printedLoggerLevel" value="FINEST"/>
    </bean>


    <bean id="myCoach"
          class="com.daksh.springdemo.BaseballCoach"
          init-method="doMyStartupStuff"
          destroy-method="doMyCleanupStuff">

        <!-- set up constructor injection -->
        <constructor-arg ref="myFortuneService"/>
    </bean>

    <!--
        For prototype scoped beans, Spring does not call the destroy method
        Prototype beans are not tracked by spring container.
        The container instantiates, configures, and otherwise assembles a prototype object
        and hands it to the client, with no further record of that prototype instance.

        To call make spring call the destroy method, we have code are own custom bean processor.
        This bean processor will keep track of of prototype scoped beans.
        During its shutdown it will call destroy() method on the prototype scoped beans.

        Also, the prototype bean must implement the DisposableBean interface.
        The interface defines a destroy method.
    -->
    <bean id="myTrackCoach"
          class="com.daksh.springdemo.TrackCoach"
          init-method="doMyStartupStuff"
          destroy-method="doMyCleanupStuff"
          scope="prototype">

        <!-- set up constructor injection -->
        <constructor-arg ref="myFortuneService"/>
    </bean>

    <bean id="myFortuneService" class="com.daksh.springdemo.HappyFortuneService"/>

    <!-- bean custom processor to handle calling destroy -->
    <bean id="customProcessor"
          class="com.daksh.springdemo.MyCustomBeanProcessor">
    </bean>

</beans>





